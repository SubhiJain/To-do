[{"C:\\Users\\subhij\\ToDoList\\to-do\\src\\index.js":"1","C:\\Users\\subhij\\ToDoList\\to-do\\src\\App.js":"2","C:\\Users\\subhij\\ToDoList\\to-do\\src\\reportWebVitals.js":"3","C:\\Users\\subhij\\ToDoList\\to-do\\src\\components\\TodoApp.js":"4","C:\\Users\\subhij\\ToDoList\\to-do\\src\\components\\TodoList.js":"5","C:\\Users\\subhij\\ToDoList\\to-do\\src\\components\\Todo.js":"6"},{"size":500,"mtime":499162500000,"results":"7","hashOfConfig":"8"},{"size":198,"mtime":1610681020755,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":499162500000,"results":"10","hashOfConfig":"8"},{"size":4234,"mtime":1610680677733,"results":"11","hashOfConfig":"8"},{"size":302,"mtime":1610611574410,"results":"12","hashOfConfig":"8"},{"size":6753,"mtime":1610683427907,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"7g2m4x",{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"16"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\subhij\\ToDoList\\to-do\\src\\index.js",[],["30","31"],"C:\\Users\\subhij\\ToDoList\\to-do\\src\\App.js",["32"],"import logo from './logo.svg';\nimport './App.css';\nimport Todo from './components/Todo';\nfunction App() {\n  return (\n    <div className=\"App\">\n       <Todo />\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\subhij\\ToDoList\\to-do\\src\\reportWebVitals.js",[],"C:\\Users\\subhij\\ToDoList\\to-do\\src\\components\\TodoApp.js",["33","34","35"],"import React, { Component } from 'react'\r\nimport  \"../App.css\";\r\nimport { DefaultButton, PrimaryButton, Stack, IStackTokens } from 'office-ui-fabric-react';\r\n\r\nexport default class TodoApp extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = \r\n        { \r\n          items: localStorage.getItem(\"list\")?JSON.parse(localStorage.getItem(\"list\")):[],\r\n          itemSelected: null,\r\n          type:'Add'\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n        render() {\r\n            return (\r\n              <div>\r\n                <h3>TODO</h3>\r\n               \r\n                  <div className=\"todoListMain\">\r\n      <div className=\"header\">\r\n                <form onSubmit={this.handleSubmit}>\r\n                  <label htmlFor=\"new-todo\">\r\n                    What needs to be done?\r\n                  </label>\r\n                  <input\r\n                    id=\"new-todo\"\r\n                    onChange={this.handleChange}\r\n                    value={this.state.itemSelected?this.state.itemSelected.text:\"\"}\r\n                  />\r\n                  <button>\r\n                    {this.state.type}\r\n                  </button>\r\n                </form>\r\n            </div>\r\n            <TodoList items={this.state.items} \r\n                            edit={(item)=> this.edit(item)}\r\n                            delete={(item)=> this.delete(item)}\r\n                            />\r\n            </div>               \r\n              </div>\r\n            );\r\n          }\r\n          edit(item){\r\n            this.setState({ itemSelected: item, type :\"Save\" });\r\n          }\r\n\r\n          delete(item){\r\n              let index = this.state.items.indexOf(item);\r\n              let tempItems = this.state.items;\r\n              tempItems.splice(index,1);\r\n            this.setState ({\r\n                items: tempItems,\r\n                text: ''\r\n              },()=>{\r\n                  localStorage.setItem(\"list\",JSON.stringify(this.state.items))\r\n              });\r\n          }\r\n\r\n          handleChange(e) {\r\n            const newItem = {\r\n                text: e.target.value,\r\n                id:this.state.itemSelected? this.state.itemSelected.id:\"\"\r\n                };\r\n            this.setState({ itemSelected : newItem });\r\n          }\r\n        \r\n          handleSubmit(e) {\r\n            e.preventDefault();\r\n            if(this.state.type === \"Add\")\r\n            {\r\n                if (this.state.itemSelected && this.state.itemSelected.text.length === 0) {\r\n                return;\r\n                }\r\n                const newItem = {\r\n                    text: this.state.itemSelected.text,\r\n                    id: Date.now()\r\n                };\r\n                this.setState(state => ({\r\n                    items: state.items.concat(newItem),\r\n                    itemSelected: null\r\n                }),()=>{\r\n                    localStorage.setItem(\"list\",JSON.stringify(this.state.items))\r\n                });\r\n            }\r\n            else{\r\n                let tempItems = this.state.items\r\n               for(let i=0;i<tempItems.length;i++){\r\n                   if(tempItems[i].id === this.state.itemSelected.id){\r\n                    tempItems[i].text= this.state.itemSelected.text;\r\n                   }\r\n               }\r\n               this.setState(\r\n                   {\r\n                       items:tempItems,\r\n                       itemSelected: null,\r\n                       type:\"Add\"\r\n                    },()=>{\r\n                    localStorage.setItem(\"list\",JSON.stringify(this.state.items))\r\n                });\r\n\r\n            }\r\n    }\r\n}\r\n\r\nclass TodoList extends React.Component {\r\n    render() {\r\n      return (\r\n        <ul className=\"theList\">\r\n          {this.props.items.map(item => (\r\n            <li key={item.id}>{item.text}\r\n            <PrimaryButton text=\"Edit\" onClick={()=> this.props.edit(item)} allowDisabledFocus  />\r\n     \r\n            {/* <button onClick={()=> this.props.edit(item)}> Edit </button> */}\r\n            <button onClick={()=> this.props.delete(item)}> Delete </button>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      );\r\n    }\r\n  }\r\n",["36","37"],"C:\\Users\\subhij\\ToDoList\\to-do\\src\\components\\TodoList.js",["38"],"C:\\Users\\subhij\\ToDoList\\to-do\\src\\components\\Todo.js",["39","40","41","42"],{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","severity":1,"message":"48","line":1,"column":8,"nodeType":"49","messageId":"50","endLine":1,"endColumn":12},{"ruleId":"47","severity":1,"message":"51","line":3,"column":10,"nodeType":"49","messageId":"50","endLine":3,"endColumn":23},{"ruleId":"47","severity":1,"message":"52","line":3,"column":40,"nodeType":"49","messageId":"50","endLine":3,"endColumn":45},{"ruleId":"47","severity":1,"message":"53","line":3,"column":47,"nodeType":"49","messageId":"50","endLine":3,"endColumn":59},{"ruleId":"43","replacedBy":"54"},{"ruleId":"45","replacedBy":"55"},{"ruleId":"47","severity":1,"message":"56","line":1,"column":17,"nodeType":"49","messageId":"50","endLine":1,"endColumn":26},{"ruleId":"47","severity":1,"message":"51","line":3,"column":10,"nodeType":"49","messageId":"50","endLine":3,"endColumn":23},{"ruleId":"47","severity":1,"message":"52","line":3,"column":40,"nodeType":"49","messageId":"50","endLine":3,"endColumn":45},{"ruleId":"47","severity":1,"message":"53","line":3,"column":47,"nodeType":"49","messageId":"50","endLine":3,"endColumn":59},{"ruleId":"47","severity":1,"message":"57","line":4,"column":20,"nodeType":"49","messageId":"50","endLine":4,"endColumn":34},"no-native-reassign",["58"],"no-negated-in-lhs",["59"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'DefaultButton' is defined but never used.","'Stack' is defined but never used.","'IStackTokens' is defined but never used.",["58"],["59"],"'Component' is defined but never used.","'ICheckboxProps' is defined but never used.","no-global-assign","no-unsafe-negation"]